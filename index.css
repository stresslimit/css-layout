/*
Requires the following in parent project:
  postcss-custom-properties
  postcss-custom-media
  postcss-calc
Also var(--unit) must be set upstream
*/

@custom-media --viewport-xs-only screen and (max-width: 767px);
@custom-media --viewport-md screen and (min-width: 768px);
@custom-media --viewport-lg screen and (min-width: 1080px);

@media (--viewport-xs-only) {
}
@media (--viewport-md) {
}

/* Containers
*/
.container, .container-md, .container-sm {
  padding-left: var(--unit);
  padding-right: var(--unit);
}

.container {
  max-width: 1000px;
  margin: auto;
}
.container-md {
  max-width: 800px;
  margin: auto;
}
.container-sm {
  max-width: 600px;
  margin: auto;
}


/* Sections with top/bottom spacing
*/
.section-lg, .vspace-lg {
  padding-top: calc(var(--unit) *4);
  padding-bottom: calc(var(--unit) *4);
}
.section, .section-md, .vspace-md {
  padding-top: calc(var(--unit) *2);
  padding-bottom: calc(var(--unit) *2);
}
.section-sm, .vspace-sm {
  padding-top: var(--unit);
  padding-bottom: var(--unit);
}

.vspace-bottom-lg {
  padding-bottom: calc(var(--unit) *4);
}
.vspace-bottom-md {
  padding-bottom: calc(var(--unit) *2);
}
.vspace-bottom-sm {
  padding-bottom: var(--unit);
}

.hspace-lg {
  padding-left: calc(var(--unit) *4);
  padding-right: calc(var(--unit) *4);
}
.hspace-md {
  padding-left: calc(var(--unit) *2);
  padding-right: calc(var(--unit) *2);
}
.hspace-sm {
  padding-left: var(--unit);
  padding-right: var(--unit);
}


/* Columns layout
*/
.flex {
  display: flex;
  align-items: center;
}
.flex-end {
  justify-content: flex-end;
}
.row-xs {
  display: flex;
  align-items: center;
  margin-left:  calc(-1 * var(--unit));
  margin-right: calc(-1 * var(--unit));
  flex-wrap: wrap;
}
.row-xs.distribute {
  justify-content: space-between;
}
.row-xs.valign-top {
  align-items: flex-start;
}
.row-xs .half,
.row-xs .third,
.row-xs .two-thirds,
.row-xs .quarter,
.row-xs .three-quarters,
.row-xs .full,
.row-xs .shrink,
.row-xs .grow
{
  box-sizing: border-box;
  padding-left: var(--unit);
  padding-right: var(--unit);
}
.row-xs .half {
  width: 50%;
}
.row-xs .third {
  width: 33.33%;
}
.row-xs .two-thirds {
  width: 66.66%;
}
.row-xs .quarter {
  width: 25%;
}
.row-xs .three-quarters {
  width: 75%;
}
.row-xs .full {
  width: 100%;
}
.row-xs .shrink,
.row-xs .grow,
.row-xs .narrow,
.row-xs .wide
{
  box-sizing: border-box;
  padding-left: var(--unit);
  padding-right: var(--unit);
}
.row-xs .shrink {
  flex-shrink: 1;
}
.row-xs .grow {
  flex-grow: 1;
}
.row-xs .order-1 { order: 1; }
.row-xs .order-2 { order: 2; }
.row-xs .order-3 { order: 3; }
.row-xs .order-4 { order: 4; }



@media (--viewport-md) {

  .row {
    display: flex;
    align-items: center;
    margin-left:  calc(-1 * var(--unit));
    margin-right: calc(-1 * var(--unit));
    flex-wrap: wrap;
  }
  .row.valign-top {
    align-items: flex-start;
  }
  .row-flex.valign-center {
    align-items: center;
  }
  .row.distribute {
    justify-content: space-between;
  }
  .valign {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .order-1 { order: 1; }
  .order-2 { order: 2; }
  .order-3 { order: 3; }
  .order-4 { order: 4; }

  .half, .third, .two-thirds, .quarter, .three-quarters, .fifth, .full, .shrink, .grow {
    box-sizing: border-box;
    padding-left: var(--unit);
    padding-right: var(--unit);
  }
  .half {
    width: 50%;
  }
  .third {
    width: 33.33%;
  }
  .two-thirds {
    width: 66.66%;
  }
  .quarter {
    width: 25%;
  }
  .fifth {
    width: 20%;
  }
  .three-quarters {
    width: 75%;
  }
  .full {
    width: 100%;
  }
  .shrink {
    flex-grow: 0;
  }
  .grow {
    flex-grow: 1;
  }

}
